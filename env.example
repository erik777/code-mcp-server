# MCP Server Configuration
# Copy this file to .env for default settings
# Copy to .env.local for local overrides (takes priority over .env)

# MCP Git Gateway Configuration

# Server Configuration
PORT=3131
REPO_PATH=./repo

# Public Base URL (for OAuth redirects)
# This should match your reverse proxy configuration
BASE_URL=https://www.example.com/reverse/proxypath

# Google OAuth 2.0 Configuration
# TODO: Replace these with your actual Google OAuth client credentials
# Get these from: https://console.cloud.google.com/apis/credentials
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret

# Session Secret (generate a secure random string)
# You can generate one with: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
SESSION_SECRET=your-session-secret-here

# Email Domain Restriction
# Only users with email addresses ending with this domain will be allowed access
ALLOWED_EMAIL_DOMAIN=@example.com

# Optional: Override default OAuth URLs (usually not needed)
# GOOGLE_AUTH_URL=https://accounts.google.com/o/oauth2/v2/auth
# GOOGLE_TOKEN_URL=https://oauth2.googleapis.com/token
# GOOGLE_USERINFO_URL=https://www.googleapis.com/oauth2/v3/userinfo

# Example for development:
# REPO_PATH=/home/user/dev/ws

# Environment files are loaded in priority order:
# 1. .env.local (highest priority, for local development overrides)
# 2. .env (default settings, can be committed to git)
# 3. Built-in defaults (fallback values in code) 